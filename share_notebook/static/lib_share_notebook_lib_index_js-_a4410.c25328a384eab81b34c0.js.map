{"version":3,"file":"lib_share_notebook_lib_index_js-_a4410.c25328a384eab81b34c0.js","mappings":"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","sources":["webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/components/share-notebook-extension.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/components/share-notebook.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/icons.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/index.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/share_notebook_plugin.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/utils/helper.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/utils/index.js","webpack://@anaconda/share_notebook/../../lib/share_notebook/lib/utils/types.js"],"sourcesContent":["import { DisposableDelegate } from \"@lumino/disposable\";\nimport { ToolbarButton } from \"@jupyterlab/apputils\";\nimport { LabIcon } from \"@jupyterlab/ui-components\";\nimport { shareNotebookIconSVG } from \"../icons\";\nimport { shareNotebook } from \"./share-notebook\";\nexport class ShareNotebookButtonExtension {\n    constructor() { }\n    createNew(panel, context) {\n        const shareNotebookinButton = () => {\n            shareNotebook(panel);\n        };\n        const button = new ToolbarButton({\n            className: \"share-notebook-button\",\n            label: \"Share\",\n            icon: new LabIcon({\n                name: \"ui-components:share-notebook\",\n                svgstr: shareNotebookIconSVG,\n            }),\n            onClick: shareNotebookinButton,\n            tooltip: \"Share notebook\",\n        });\n        panel.toolbar.insertAfter(\"spacer\", \"shareNotebookButton\", button);\n        return new DisposableDelegate(() => {\n            button.dispose();\n        });\n    }\n}\n","import { Dialog } from \"@jupyterlab/apputils\";\nimport { showDialog, InputDialog, showErrorMessage, } from \"@jupyterlab/apputils\";\nimport { copyToClipboard } from \"../utils\";\nimport { backend, getConfig } from \"@anaconda/shared\";\nimport React from \"react\";\n/**\n * A notebook widget extension that adds a button to the toolbar.\n */\nasync function warnOfUnsavedChanges(widget) {\n    const okay = await showDialog({\n        title: \"Publish unsaved notebook?\",\n        body: \"The notebook has unsaved changes. Do you want to save changes before sharing?\",\n        host: document.body,\n        hasClose: true,\n        buttons: [\n            Dialog.cancelButton({ label: \"Cancel\" }),\n            Dialog.okButton({\n                label: \"Share Without Saving\",\n            }),\n            Dialog.okButton({\n                label: \"Save and Share\",\n                caption: \"Save changes before sharing\",\n                actions: [\"save\"],\n            }),\n        ],\n    }).then((result) => {\n        if (result.button.actions.includes(\"save\")) {\n            console.log(\"saving notebook\");\n            widget?.context.save();\n        }\n        return result;\n    });\n    return okay.button.accept;\n}\nasync function uploadNotebookToProjects(upload_filename, nb_json) {\n    // POST to extension backend\n    const dataToSend = {\n        nb_json: nb_json,\n        upload_filename: upload_filename,\n    };\n    const shareResponse = await backend\n        .backendFetch(\"aext_share_notebook_server/share_notebook_v2\", {}, {\n        method: \"POST\",\n        body: JSON.stringify(dataToSend),\n    })\n        .then((r) => backend.handleProxyResponse(r));\n    return {\n        notebook_url: shareResponse.notebook_url,\n        project_id: shareResponse.project_id,\n        project_name: shareResponse.project_name,\n        preview_url: shareResponse.preview_url,\n        overview_url: shareResponse.overview_url,\n        cloud_base_url: shareResponse.cloud_base_url,\n    };\n}\nfunction showNotebookSharedDialog(notebookURL, overviewURL, project_name, cloudBaseURL) {\n    // show badge\n    const badgeImg = `${getConfig()?.static_content\n        .url}/content/a22d04e8445b700f28937ab3231b8cded505d0395c63b7a269696722196d5415`;\n    const shareURL = `${cloudBaseURL}/nbserve/launch_notebook?nb_url=${encodeURIComponent(notebookURL)}`;\n    const badgeHTML = `<a target=\"_blank\" href=${shareURL}><img src=\"${badgeImg}\"/></a>`;\n    const body = (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"notebook-shared-dialog\" },\n            React.createElement(\"div\", { className: \"notebook-shared-link\" },\n                React.createElement(\"h4\", { className: \"notebook-shared-subheader\" }, \"Preview Link\"),\n                React.createElement(\"p\", null, \"This will allow the recipient to preview, open, and/or download.\"),\n                React.createElement(\"div\", { className: \"notebook-shared-link-copy\" },\n                    React.createElement(\"input\", { type: \"text\", id: \"overview_link\", value: overviewURL }),\n                    React.createElement(\"a\", { className: \"notebook-shared-link-copy-button\", onClick: () => copyToClipboard(overviewURL, \"Link to notebook preview copied to clipboard\", \"An error occurred when copying the notebook preview link\"), title: \"Copy notebook preview link to clipboard\" },\n                        React.createElement(\"div\", { className: \"notebook-shared-link-copy-icon\" }))),\n                React.createElement(\"button\", { onClick: () => copyToClipboard(`${overviewURL}`, \"Link to notebook copied to clipboard\", \"An error occurred when copying the notebook link\"), className: \"notebook-shared-copy-button\" },\n                    React.createElement(\"div\", { className: \"notebook-shared-link-icon\" }),\n                    \"Copy Link\")),\n            React.createElement(\"div\", { className: \"notebook-shared-badge\" },\n                React.createElement(\"h4\", { className: \"notebook-shared-subheader\" }, \"Notebook Badge\"),\n                React.createElement(\"div\", { className: \"notebook-shared-badge-copy\" },\n                    React.createElement(\"input\", { type: \"text\", id: \"badgeHTML\", value: badgeHTML }),\n                    React.createElement(\"a\", { className: \"notebook-shared-badge-copy-button\", onClick: () => copyToClipboard(`${badgeHTML}`, \"Badge HTML copied to clipboard\", \"An error occurred when copying the badge HTML\"), title: \"Copy badge HTML to clipboard\" },\n                        React.createElement(\"div\", { className: \"notebook-shared-badge-copy-icon\" }))),\n                React.createElement(\"p\", { style: { marginTop: \"14px \" } }, \"Badge Preview\"),\n                React.createElement(\"a\", { target: \"_blank\", href: shareURL },\n                    React.createElement(\"img\", { src: badgeImg })),\n                React.createElement(\"button\", { onClick: () => copyToClipboard(`${badgeHTML}`, \"Badge HTML copied to clipboard\", \"An error occurred when copying the badge HTML\"), className: \"notebook-shared-copy-button\" },\n                    React.createElement(\"div\", { className: \"notebook-shared-code-icon\" }),\n                    \"Copy Embed Code\")))));\n    const host = document.createElement(\"div\");\n    host.classList.add(\"notebook-shared-modal\");\n    document.body.appendChild(host);\n    showDialog({\n        title: `Share '${project_name}' Project`,\n        body,\n        host: host,\n        hasClose: true,\n        buttons: [\n            Dialog.okButton({\n                label: \"Done\",\n            }),\n        ],\n    });\n}\nexport async function shareNotebook(widget) {\n    if (!widget) {\n        console.error(\"no notebook widget found\");\n        return;\n    }\n    const content = widget.context;\n    const nb_name = content.contentsModel?.name;\n    const model = widget.model;\n    // warn user of unsaved changes\n    if (model?.dirty) {\n        if (!(await warnOfUnsavedChanges(widget))) {\n            return;\n        }\n    }\n    // collect filename of shared file\n    const results = await InputDialog.getText({\n        title: \"Filename of shared notebook\",\n        text: nb_name,\n    });\n    const upload_filename = results.value;\n    if (!upload_filename) {\n        return;\n    }\n    // upload the notebook\n    const nb_json = model?.toJSON();\n    try {\n        const response = await uploadNotebookToProjects(upload_filename, nb_json);\n        showNotebookSharedDialog(response.notebook_url, response.overview_url, response.project_name, response.cloud_base_url);\n    }\n    catch (error) {\n        console.error(error);\n        return showErrorMessage(\"Error sharing notebook\", error);\n    }\n}\n","export const shareNotebookIconSVG = `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\nxmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0_289_5006)\">\n    <path d=\"M18 16.08C17.24 16.08 16.56 16.38 16.04 16.85L8.91 12.7C8.96 12.47 9 12.24 9 12C9 11.76 8.96 11.53 8.91 11.3L15.96 7.19C16.5 7.69 17.21 8 18 8C19.66 8 21 6.66 21 5C21 3.34 19.66 2 18 2C16.34 2 15 3.34 15 5C15 5.24 15.04 5.47 15.09 5.7L8.04 9.81C7.5 9.31 6.79 9 6 9C4.34 9 3 10.34 3 12C3 13.66 4.34 15 6 15C6.79 15 7.5 14.69 8.04 14.19L15.16 18.35C15.11 18.56 15.08 18.78 15.08 19C15.08 20.61 16.39 21.92 18 21.92C19.61 21.92 20.92 20.61 20.92 19C20.92 17.39 19.61 16.08 18 16.08Z\" fill=\"#323232\"/>\n</g>\n<defs>\n    <clipPath id=\"clip0_289_5006\">\n        <rect width=\"24\" height=\"24\" fill=\"white\"/>\n    </clipPath>\n</defs>\n</svg>`;\n","import ShareNotebookPlugin from \"./share_notebook_plugin\";\nexport { ShareNotebookPlugin };\n","import { ShareNotebookButtonExtension } from \"./components/share-notebook-extension\";\nexport default class ShareNotebookPlugin {\n    async activate(app, opts) {\n        const coreReady = await opts.corePlugin.ready();\n        if (coreReady.featureFlag.getBool(\"monorepo-share-notebooks\", false) &&\n            !coreReady.featureFlag.getBool(\"monorepo-notebook-sharing-dialog\", false)) {\n            console.log(\"[Monorepo] Enabling the share-notebook plugin\");\n            app.docRegistry.addWidgetExtension(\"Notebook\", new ShareNotebookButtonExtension());\n        }\n    }\n}\n","import { INotification } from \"jupyterlab_toastify\";\n// TODO migrate INotifications -> Notification once jupyterlab is upgraded to 3.6.0+\n// https://github.com/jupyterlab/jupyterlab/pull/12959\n// import { Notification } from '@jupyterlab/apputils';\n// This function is also used in data_catalog\n// TODO move to shared library?\nexport async function copyToClipboard(text, successMessage = \"Copied to clipboard\", errorMessage = \"Failed to copy to clipboard\") {\n    try {\n        await navigator.clipboard.writeText(text);\n        INotification.success(successMessage, {\n            autoClose: 5000,\n        });\n    }\n    catch (error) {\n        INotification.error(errorMessage, {\n            autoClose: 5000,\n        });\n        console.error(errorMessage, error);\n    }\n}\n","export * from \"./helper\";\nexport * from \"./types\";\n","export {};\n"],"names":[],"sourceRoot":""}